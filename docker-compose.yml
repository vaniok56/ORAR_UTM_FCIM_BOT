services:

  mysql:
    image: mysql:8.0
    env_file: mysql.env
    container_name: orar_mysql
    restart: always
    user: "1000:1000"
    volumes:
      - ./mysql:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d:ro
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    command: >
      --default-authentication-plugin=caching_sha2_password --log-error-verbosity=1 --console=1
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orar_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        # More aggressive filtering
        tag: "mysql"

  orarbot:
    build:
      context: .
      dockerfile: Dockerfile
    image: orarbot:latest
    container_name: orar_bot
    restart: always
    env_file: mysql.env
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./sessions:/sessions
      - ./BD.csv:/BD.csv
      - ./dynamic_group_lists.py:/dynamic_group_lists.py
      - ./orarbot.log:/orarbot.log
      - ./backups:/backups
    environment:
      - MYSQL_HOST=mysql
      - TZ=Europe/Chisinau
      - PYTHONUNBUFFERED=1
    tty: true
    networks:
      - orar_network
  restarter:
    image: docker:cli
    container_name: restarter
    restart: always
    volumes: [ "/var/run/docker.sock:/var/run/docker.sock" ]
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        while true; do
          if [ $(date +'%H:%M') = 17:10 ] || [ $(date +'%H:%M') = 04:00 ]; then
            docker restart orar_bot
          fi
          sleep 60
        done
networks:
  orar_network:
    driver: bridge
